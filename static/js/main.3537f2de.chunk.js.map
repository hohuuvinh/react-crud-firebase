{"version":3,"sources":["logo.svg","components/ContactForm.js","firebase.js","components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","initialFieldValues","fullname","mobile","email","address","useState","values","setValues","useEffect","currentId","contactObject","currenId","handleInputChange","e","target","name","value","autoComplete","onSubmit","preventDefault","addOrEdit","className","placeholder","onChange","type","fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","Contacts","setContactObject","setCurrenId","firebaseDb","child","on","snapshot","val","obj","push","err","console","log","set","Object","keys","map","id","onClick","remove","onDelete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3537f2de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,useEffect} from 'react';\r\n\r\nfunction ContactForm(props) {\r\n    const initialFieldValues = {\r\n        fullname:'',\r\n        mobile:'',\r\n        email:'',\r\n        address:''\r\n    }\r\n    var [values,setValues] = useState(initialFieldValues)\r\n    useEffect(()=>{\r\n\r\n        if(props.currentId==\"\"){\r\n            setValues({\r\n                ...initialFieldValues\r\n            })\r\n        }else{\r\n            setValues({\r\n                ...props.contactObject[props.currenId]\r\n            })\r\n        }\r\n    },[props.currenId,props.contactObject])\r\n\r\n    const handleInputChange = e =>{\r\n        var {name,value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n    }\r\n    const handleFormSumit =e =>{\r\n        e.preventDefault();\r\n        props.addOrEdit(values)\r\n        setValues(initialFieldValues)\r\n    }\r\n    return (\r\n        <div>\r\n            <form autoComplete=\"off\" onSubmit={handleFormSumit}>\r\n                <div className=\"form-group input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                    </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"full name\" name=\"fullname\" \r\n                    value={values.fullname}\r\n                    onChange={handleInputChange}></input>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                    </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"mobile\" name=\"mobile\" \r\n                    value={values.mobile}\r\n                    onChange={handleInputChange}></input>\r\n                </div>\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                    </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"email\" name=\"email\" \r\n                    value={values.email}\r\n                    onChange={handleInputChange}></input>\r\n                </div>\r\n                </div>\r\n                <div className=\"form-group input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                    </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"add ress\" name=\"address\" \r\n                    value={values.address}\r\n                    onChange={handleInputChange}></input>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value={props.currenId==\"\"?\"save\":\"update\"} className=\"btn btn-primary btn-block\"></input>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","import firebase from 'firebase'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCGVXIZp_Ejqcrn-1oniWF3zGII_FqVwzk\",\r\n    authDomain: \"react-crud-c43b6.firebaseapp.com\",\r\n    databaseURL: \"https://react-crud-c43b6-default-rtdb.firebaseio.com\",\r\n    projectId: \"react-crud-c43b6\",\r\n    storageBucket: \"react-crud-c43b6.appspot.com\",\r\n    messagingSenderId: \"89691730295\",\r\n    appId: \"1:89691730295:web:947312d8a7b039a7da3172\",\r\n    measurementId: \"G-5X1037KMZ7\"\r\n  };\r\n var fireDb =  firebase.initializeApp(firebaseConfig);\r\nexport default fireDb.database().ref();","import React, { useEffect, useState } from 'react';\r\nimport ContactForm from \"./ContactForm\";\r\nimport firebaseDb from \"../firebase\";\r\nconst Contacts = () => {\r\n    var [contactObject, setContactObject] = useState({})\r\n    var [currenId, setCurrenId] = useState('')\r\n    useEffect(() => {\r\n        firebaseDb.child('contacts').on('value', snapshot => {\r\n            if (snapshot.val() != null) {\r\n                setContactObject({\r\n                    ...snapshot.val()\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    const addOrEdit = obj => {\r\n        if (currenId == \"\") {\r\n            firebaseDb.child('contacts').push(\r\n                obj,\r\n                err => {\r\n                    if (err) {\r\n                        console.log(err)\r\n                    }\r\n                }\r\n            )\r\n            setCurrenId('')\r\n        } else {\r\n            firebaseDb.child(`contacts/${currenId}`).set(\r\n                obj,\r\n                err => {\r\n                    if (err) {\r\n                        console.log(err)\r\n                    }\r\n                }\r\n            )\r\n            setCurrenId('')\r\n        }\r\n    }\r\n\r\n    const onDelete = (id)=>{\r\n        firebaseDb.child(`contacts/${id}`).remove(\r\n            err => {\r\n                if (err) {\r\n                    console.log(err)\r\n                }\r\n            }\r\n        )\r\n        setCurrenId('')\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"text-center\">Contacts Rrishs</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <ContactForm {...({ addOrEdit, currenId, contactObject })} />\r\n                </div>\r\n                <div className=\"col-md-7\" >\r\n                    <table className=\"table table-borderless table-stripped\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>Full Name</th>\r\n                                <th>Mobile</th>\r\n                                <th>Email</th>\r\n                                <th>Address</th>\r\n                                <th>Method</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                Object.keys(contactObject).map(id => {\r\n                                    return <tr key={id}>\r\n                                        <td>{contactObject[id].fullname}</td>\r\n                                        <td>{contactObject[id].mobile}</td>\r\n                                        <td>{contactObject[id].email}</td>\r\n                                        <td>{contactObject[id].address}</td>\r\n                                        <td>\r\n                                            <a className=\"btn text-primary\" onClick={() => setCurrenId(id)}>\r\n                                                <i className=\"fas fa-pencil-alt\"></i>\r\n                                            </a>\r\n                                            <a className=\"btn text-danger\" onClick={()=>onDelete(id)}>\r\n                                                <i className=\"fas fa-trash-alt\"></i>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Contacts;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Contacts from './components/Contacts'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-8 offset-md-1\">\r\n        <Contacts/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}